:host {
	/* These variables are set via JavaScript. */
	--intrinsic-width: 0px;
	--intrinsic-height: 0px;
	
	display: inline-block;
	width: var(--intrinsic-width);
	height: var(--intrinsic-height);
}
#outer {
	/* These variables are set via JavaScript. */
	--intrinsic-width: 0px;
	--intrinsic-height: 0px;
	--intrinsic-aspectratio: 1;
	
	overflow: hidden;
	height: 100%;
	line-height: 1; /* For broken images. */
}
#inner {
	/* Align */
	text-align: left;
	transform: translateX(var(--translateX)) translateY(var(--translateY));
	
	/* Fit */
	height: 100%;
	container-type: size; /* Only required for fit=contain. */
}
#image {
	/* Align */
	display: inline-block;
	transform: translateX(calc(-1 * var(--translateX))) translateY(calc(-1 * var(--translateY)));
	
	/* Fit */
	aspect-ratio: var(--intrinsic-aspectratio);
}


/*====================/
  Alignment
/====================*/

/*=== Horizontal ===*/

/* Center (default) */
#inner {
	--translateX: 50%;
}

/* Left */
[data-align-x~=left] #inner {
	--translateX: 0%;
}

/* Right */
[data-align-x~=right] #inner {
	--translateX: 100%;
}

/*=== Vertical ===*/

/* Middle (default) */
#inner {
	--translateY: 50%;
}

/* Top */
[data-align-y~=top] #inner {
	--translateY: 0%;
}

/* Bottom */
[data-align-y~=bottom] #inner {
	--translateY: 100%;
}

/* Broken image */
#inner:has(img.error) {
	display: table;
	width: max-content;
	min-width: 100%;
	transform: none;
}
#image:has(img.error) {
	display: table-cell;
	text-align: center;
	vertical-align: middle;
	height: 100cqh;
	transform: none;
}
[data-align-x~=left] #image:has(img.error) {
	text-align: left;
}
[data-align-x~=right] #image:has(img.error) {
	text-align: right;
}
[data-align-y~=top] #image:has(img.error) {
	vertical-align: top;
}
[data-align-y~=bottom] #image:has(img.error) {
	vertical-align: bottom;
}


/*====================/
  Fit
/====================*/

/* Cover (default) */
[data-fit=cover] #image {
	min-width: 100%;
	min-height: 100%;
	width: fit-content;
	height: fit-content;
}

/* Fill */
[data-fit=fill] #image {
	aspect-ratio: auto;
	width: 100%;
	height: 100%;
}

/* Contain */
[data-fit=contain] #image {
	max-width: 100%;
	max-height: 100%;
	width: min(100cqw, calc(100cqh * var(--intrinsic-aspectratio)));
	height: auto;
}

/* Scale-down */
[data-fit=scale-down] #image {
	max-width: 100%;
	max-height: 100%;
	width: auto;
	height: auto;
}
[data-fit=scale-down].svg #image {
	width: min(100cqw, calc(100cqh * var(--intrinsic-aspectratio)), var(--intrinsic-width));
	height: auto;
}

/* None */
[data-fit=none] #image {
	/* Width and height are required here for SVGs. Otherwise 'auto' works fine. */
	width: var(--intrinsic-width);
	height: var(--intrinsic-height);
}

/* Fit is not 'none' */
#outer:not([data-fit=none]) img {
	width: 100%;
	height: 100%;
}

/* Broken image */
#outer:has(img.error) {
	overflow: auto;
	scrollbar-width: none;
}
#image:has(img.error) {
	width: 100%;
	height: auto;
}
