/*====================/
  Variables
/====================*/

#frame {
	
	/* These variables are set via JavaScript. */
	/*--intrinsic-width: 0;
	--intrinsic-height: 0;
	--intrinsic-aspectratio: 0;
	--specified-width: 0;
	--specified-height: 0;
	--specified-aspectratio: 0;*/
	
	--intrinsic-width-px: calc(var(--intrinsic-width) * 1px);
	--intrinsic-height-px: calc(var(--intrinsic-height) * 1px);
	--specified-width-px: calc(var(--specified-width) * 1px);
	--specified-width-percent: calc(var(--specified-width) * 1%);
	--specified-height-px: calc(var(--specified-height) * 1px);
	
	--border-width: 0;
	--border-width-px: calc(var(--border-width) * 1px);
}

/*====================/
  Structure
/====================*/

:host {
	display: inline-block;
	max-width: 100%;
}

#frame {
	container-type: inline-size;
	overflow: hidden;
	box-sizing: content-box;
	width: var(--intrinsic-width-px);
	max-width: 100%;
	max-width: calc(100% - 2 * var(--border-width-px));
	border-width: var(--border-width-px) !important;
}
#frame.hasWidth {
	width: var(--specified-width-px);
}

#backing {
	container-type: size;
	position: relative; /*for the test page*/
	width: min(100cqw, var(--intrinsic-width-px));
	height: min(100cqh, var(--intrinsic-height-px));
}
.hasWidth #backing {
	width: min(100cqw, var(--specified-width-px));
}
.hasWidthPercentage #backing {
	width: min(100cqw, var(--specified-width-percent));
}
.hasHeight #backing {
	height: min(100cqh, var(--specified-height-px));
}
/*#frame.error #backing {
	height: var(--intrinsic-height-px);
}*/

img {
	box-sizing: content-box;
	display: inline-block;
	position: relative;
	position: absolute; /*for the test page*/
	box-sizing: content-box;
	
	transform: translateX(var(--translateX)) translateY(var(--translateY));
	
	/* For alt text of broken images. */
	white-space: nowrap;
}
#frame.error img {
	width: auto;
	min-width: auto;
	max-width: none;
	height: auto;
	min-height: auto;
	max-height: none;
	left: 0;
	top: 0;
	transform: translateY(50cqh) translateY(-50%);
}


/*====================/
  Fit: None
/====================*/

:host([fit=none]) img {
	width: var(--intrinsic-width-px);
}


/*====================/
  Fit: Cover
/====================*/

:host([fit=cover]) img {
	min-width: 100cqw;
	min-height: 100cqh;
}


/*====================/
  Fit: Fill
/====================*/

:host([fit=fill]) img {
	width: 100%;
	height: 100%;
}


/*====================/
  Fit: Contain
/====================*/

:host([fit=contain]) img {
	width: min(100cqw, 100cqh * var(--intrinsic-aspectratio));
}


/*====================/
  Fit: Scale Down
/====================*/

:host([fit=scale-down]) img {
	width: min(100cqw, 100cqh * var(--intrinsic-aspectratio), var(--intrinsic-width-px));
}


/*****************/
/*** Alignment ***/
/*****************/

/*** Horizontal ***/

:host([align~=right]) img {
	--translateX: -100%;
	left: 100cqw;
}
:host([align~=center]) img {
	--translateX: -50%;
	left: 50cqw;
}
img,
:host([align~=left]) img {
	--translateX: 0%;
	left: 0cqw;
}

/*** Vertical ***/

:host([align~=bottom]) img {
	--translateY: -100%;
	top: 100cqh;
}
:host([align~=middle]) img {
	--translateY: -50%;
	top: 50cqh;
}
img,
:host([align~=top]) img {
	--translateY: 0%;
	top: 0cqh;
}
