/********************************/
/*** Adaptive Image Component ***/
/********************************/

:host {
	display: inline-block;
	max-width: 100%;
}

/***************/
/*** Wrapper ***/
/***************/

#wrapper {
	/*box-sizing: content-box;*/
	width: calc((var(--intrinsic-width) * 1px) + (var(--border-width-total) * 1px));
	max-width: 100%;
}
.hasWidth {
	max-width: calc(var(--specified-width) * 1px);
}
.hasWidthPercentage {
	max-width: calc(var(--specified-width) * 1%);
}
.hasHeight {
	height: calc(var(--specified-height) * 1px);
}

/*************/
/*** Frame ***/
/*************/

#frame {
	box-sizing: border-box;
	container-type: inline-size;
	overflow: hidden;
}

/***************/
/*** Backing ***/
/***************/

#backing {
	container-type: size;
	
	height: calc(var(--intrinsic-height) * 1px);
}
#backing:has(img.svg){
	height: calc((100cqw - var(--border-width-total) * 1px) / var(--intrinsic-aspectratio)) !important;
}

:host([fit=none]) #backing {
	
}
:host([fit=cover]) #backing {
	
}
:host([fit=fill]) #backing {
	
}
:host([fit=contain]) #backing {
	
}
:host([fit=scale-down]) #backing {
	
}

:host([fit=none]) .hasWidth #backing {
	max-width: calc(var(--specified-width) * 1px);
	height: calc(var(--intrinsic-height) * 1px);
}
:host([fit=cover]) .hasWidth #backing {
	max-width: calc(var(--specified-width) * 1px);
	height: min(max(var(--intrinsic-height) * 1px, var(--specified-width) * 1px * var(--intrinsic-aspectratio)), var(--specified-height) * 1px);
}
:host([fit=fill]) .hasWidth #backing {
	max-width: calc(var(--specified-width) * 1px);
	height: calc(var(--specified-width) * 1px / var(--intrinsic-aspectratio));
}
:host([fit=contain]) .hasWidth #backing {
	max-width: calc(var(--specified-width) * 1px);
	height: calc((100cqw - var(--border-width-total) * 1px) / var(--specified-aspectratio));
}
:host([fit=scale-down]) .hasWidth #backing {
	max-width: calc(var(--specified-width) * 1px);
	height: min(var(--intrinsic-height) * 1px, var(--specified-width) * 1px / var(--intrinsic-aspectratio));
}

.hasWidthPercentage #backing {
	/*max-width: calc((var(--specified-width) + var(--border-width-total)) * 1%);*/
	max-width: calc(var(--specified-width) * 1%);
}
.hasHeight #backing {
	/*height: calc((var(--specified-height) + var(--border-height-total)) * 1px);*/
	height: calc(var(--specified-height) * 1px);
	height: calc((100cqw - var(--border-width-total) * 1px) / var(--intrinsic-aspectratio));
}

/*************/
/*** Image ***/
/*************/

img {
	display: inline-block;
	position: relative;
	box-sizing: content-box;
	white-space: nowrap;
	
	--scaleX: calc(var(--specified-width) / var(--intrinsic-width));
	--scaleY: calc(var(--specified-height) / var(--intrinsic-height));
	--scale: 1;
	
	transform: translate(-50%, -50%) scale(var(--scale)) translate(50%, 50%) translateX(var(--translateX)) translateY(var(--translateY));
}

.hasWidth img {
	--scaleX: calc(var(--specified-width) / var(--intrinsic-width));
}
.hasHeight img {
	--scaleY: calc(var(--specified-height) / var(--intrinsic-height));
}

/*****************/
/*** Alignment ***/
/*****************/

/*** Alignment: Horizontal ***/

:host([align~=right]) img {
	--translateX: -100%;
	left: 100cqw;
}
:host([align~=center]) img {
	--translateX: -50%;
	left: 50cqw;
}
img,
:host([align~=left]) img {
	--translateX: 0%;
	left: 0cqw;
}

/*** Alignment: Vertical ***/

:host([align~=bottom]) img {
	--translateY: -100%;
	top: 100cqh;
}
:host([align~=middle]) img {
	--translateY: -50%;
	top: 50cqh;
}
img,
:host([align~=top]) img {
	--translateY: 0%;
	top: 0cqh;
}

/***********/
/*** Fit ***/
/***********/

/*** Fit: Cover ***/

:host([fit=cover]) img.raster {
	--scale: max(var(--scaleX), var(--scaleY));
}
:host([fit=cover]) img.svg {
	--scale: max(1, var(--intrinsic-aspectratio) / var(--specified-aspectratio));
}

/*** Fit: Fill ***/

:host([fit=fill]) img.raster {
	width: min(100%, var(--specified-width) * 1px);
	height: min(100%, var(--specified-height) * 1px);
}
:host([fit=fill]) img.svg {
	--scaleX: 1;
	--scaleY: calc(var(--intrinsic-aspectratio) / var(--specified-aspectratio));
	transform: translate(-50%, -50%) scale(var(--scaleX), var(--scaleY)) translate(50%, 50%) translateX(var(--translateX)) translateY(var(--translateY));
}

/*** Fit: Contain ***/

:host([fit=contain]) img.raster {
	width: min(100cqw, var(--intrinsic-width) * 1px);
	/*--scaleX: max(1, var(--specified-width) / var(--intrinsic-width));
	--scaleY: max(1, var(--specified-height) / var(--intrinsic-height));
	--scale: min(var(--scaleX), var(--scaleY));*/
}

/*** Fit: Scale Down ***/

:host([fit=scale-down]) img.raster {
	--scale: min(1, var(--scaleX), var(--scaleY));
}



/*******************/
/*** Test Images ***/
/*******************/

:host(.svg-img) img {
	filter: hue-rotate(65deg);
	background: conic-gradient(hwb(70 15% 30% / 1), hwb(150 15% 45% / 1));
}
